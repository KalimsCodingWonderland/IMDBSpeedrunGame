{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kalim\\\\PycharmProjects\\\\IMDBSpeedrunGame\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n//frontend/src/App.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [startMovie, setStartMovie] = useState('');\n  const [endMovie, setEndMovie] = useState('');\n  const [bfsPath, setBfsPath] = useState(null);\n  const [dijkstraPath, setDijkstraPath] = useState(null);\n  const [currentMovie, setCurrentMovie] = useState(null);\n  const [animationIndex, setAnimationIndex] = useState(0);\n  const [showDijkstra, setShowDijkstra] = useState(false);\n\n  // Fetch movie suggestions (same as before)\n  const fetchMovieSuggestions = async (query, setSuggestions) => {\n    if (query.length > 2) {\n      const res = await axios.get(`/search_movie?movie_name=${query}`);\n      setSuggestions(res.data);\n    } else {\n      setSuggestions([]);\n    }\n  };\n  const searchMovies = async () => {\n    const res = await axios.get(`/search_path?start=${startMovie}&end=${endMovie}`);\n    setBfsPath(res.data.bfs_path);\n    setDijkstraPath(res.data.dijkstra_path);\n    setAnimationIndex(0);\n    setCurrentMovie(null);\n  };\n\n  // Animate BFS path\n  const visualizePath = (path, index = 0) => {\n    if (path && index < path.length) {\n      setCurrentMovie(path[index]);\n      setAnimationIndex(index);\n      setTimeout(() => visualizePath(path, index + 1), 1000); // Show each movie every second\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Path Finder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"autocomplete\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: startMovie,\n        onChange: e => setStartMovie(e.target.value),\n        placeholder: \"Start Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"autocomplete\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: endMovie,\n        onChange: e => setEndMovie(e.target.value),\n        placeholder: \"End Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: searchMovies,\n      children: \"Find Path\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), bfsPath && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"BFS Path:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => visualizePath(bfsPath),\n        children: \"Visualize BFS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), currentMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Current Movie:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentMovie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), dijkstraPath && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Dijkstra Path:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => visualizePath(dijkstraPath),\n        children: \"Visualize Dijkstra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), showDijkstra && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Current Movie:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentMovie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Q0BqE/MhmyRXwqedJlPaqPo8M6c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","startMovie","setStartMovie","endMovie","setEndMovie","bfsPath","setBfsPath","dijkstraPath","setDijkstraPath","currentMovie","setCurrentMovie","animationIndex","setAnimationIndex","showDijkstra","setShowDijkstra","fetchMovieSuggestions","query","setSuggestions","length","res","get","data","searchMovies","bfs_path","dijkstra_path","visualizePath","path","index","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kalim/PycharmProjects/IMDBSpeedrunGame/frontend/src/App.js"],"sourcesContent":["//frontend/src/App.js\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './styles.css';\r\n\r\nfunction App() {\r\n    const [startMovie, setStartMovie] = useState('');\r\n    const [endMovie, setEndMovie] = useState('');\r\n    const [bfsPath, setBfsPath] = useState(null);\r\n    const [dijkstraPath, setDijkstraPath] = useState(null);\r\n    const [currentMovie, setCurrentMovie] = useState(null);\r\n    const [animationIndex, setAnimationIndex] = useState(0);\r\n    const [showDijkstra, setShowDijkstra] = useState(false);\r\n\r\n    // Fetch movie suggestions (same as before)\r\n    const fetchMovieSuggestions = async (query, setSuggestions) => {\r\n        if (query.length > 2) {\r\n            const res = await axios.get(`/search_movie?movie_name=${query}`);\r\n            setSuggestions(res.data);\r\n        } else {\r\n            setSuggestions([]);\r\n        }\r\n    };\r\n\r\n    const searchMovies = async () => {\r\n        const res = await axios.get(`/search_path?start=${startMovie}&end=${endMovie}`);\r\n        setBfsPath(res.data.bfs_path);\r\n        setDijkstraPath(res.data.dijkstra_path);\r\n        setAnimationIndex(0);\r\n        setCurrentMovie(null);\r\n    };\r\n\r\n    // Animate BFS path\r\n    const visualizePath = (path, index = 0) => {\r\n        if (path && index < path.length) {\r\n            setCurrentMovie(path[index]);\r\n            setAnimationIndex(index);\r\n            setTimeout(() => visualizePath(path, index + 1), 1000); // Show each movie every second\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Movie Path Finder</h1>\r\n\r\n            <div className=\"autocomplete\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={startMovie}\r\n                    onChange={e => setStartMovie(e.target.value)}\r\n                    placeholder=\"Start Movie\"\r\n                />\r\n            </div>\r\n            <div className=\"autocomplete\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={endMovie}\r\n                    onChange={e => setEndMovie(e.target.value)}\r\n                    placeholder=\"End Movie\"\r\n                />\r\n            </div>\r\n            <button onClick={searchMovies}>Find Path</button>\r\n\r\n            {bfsPath && (\r\n                <div>\r\n                    <h2>BFS Path:</h2>\r\n                    <button onClick={() => visualizePath(bfsPath)}>Visualize BFS</button>\r\n                    {currentMovie && (\r\n                        <div>\r\n                            <h3>Current Movie:</h3>\r\n                            <p>{currentMovie}</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {dijkstraPath && (\r\n                <div>\r\n                    <h2>Dijkstra Path:</h2>\r\n                    <button onClick={() => visualizePath(dijkstraPath)}>Visualize Dijkstra</button>\r\n                    {showDijkstra && (\r\n                        <div>\r\n                            <h3>Current Movie:</h3>\r\n                            <p>{currentMovie}</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}