{"ast":null,"code":"var _jsxFileName = \"/Users/vovapet/PycharmProjects/IMDBSpeedrunGame/frontend/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './styles.css';\n\n// Updated MovieCardDeck Component\n// In your MovieCardDeck component (inside App.js or a separate file)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MovieCardDeck({\n  movies,\n  startMovieId,\n  endMovieId\n}) {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const totalMovies = movies.length;\n  const handleNext = () => {\n    setCurrentIndex(prevIndex => (prevIndex + 1) % totalMovies);\n  };\n  const handlePrev = () => {\n    setCurrentIndex(prevIndex => (prevIndex - 1 + totalMovies) % totalMovies);\n  };\n  const handleCardClick = movieId => {\n    const tmdbUrl = `https://www.themoviedb.org/movie/${movieId}`;\n    window.open(tmdbUrl, '_blank');\n  };\n  if (movies.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-card-deck\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nav-arrow left-arrow\",\n      onClick: handlePrev,\n      children: \"\\u276E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-card-container\",\n      children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `movie-card ${index === currentIndex ? 'active' : 'inactive'} ${movie.id === startMovieId ? 'start-movie' : movie.id === endMovieId ? 'end-movie' : ''}`,\n        style: {\n          backgroundImage: movie.poster_path ? `url(https://image.tmdb.org/t/p/w500${movie.poster_path})` : 'url(/default-poster.jpg)'\n        },\n        onClick: () => handleCardClick(movie.id),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movie.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), movie.connection && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"connection-info\",\n            children: [\"Connected via: \", movie.connection.type, \" -\", ' ', movie.connection.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nav-arrow right-arrow\",\n      onClick: handleNext,\n      children: \"\\u276F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieCardDeck, \"tusBbsahUVevXfyh6oH5R6YDC9Q=\");\n_c = MovieCardDeck;\nfunction App() {\n  _s2();\n  const [startMovie, setStartMovie] = useState('');\n  const [endMovie, setEndMovie] = useState('');\n  const [algorithm, setAlgorithm] = useState('dijkstra');\n  const [startMovieSuggestions, setStartMovieSuggestions] = useState([]);\n  const [endMovieSuggestions, setEndMovieSuggestions] = useState([]);\n  const [path, setPath] = useState(null);\n  const [processedMovies, setProcessedMovies] = useState([]);\n  const [topProcessedMovies, setTopProcessedMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [startMovieId, setStartMovieId] = useState(null);\n  const [endMovieId, setEndMovieId] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [loadedMovies, setLoadedMovies] = useState([]);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [executionTime, setExecutionTime] = useState(null);\n  const fetchMovieSuggestions = async (query, setSuggestions) => {\n    if (query.length > 2) {\n      try {\n        const res = await axios.get(`/search_movie?movie_name=${encodeURIComponent(query)}`);\n        setSuggestions(res.data.results || []);\n      } catch (err) {\n        console.error('Error fetching movie suggestions:', err);\n        setSuggestions([]);\n      }\n    } else {\n      setSuggestions([]);\n    }\n  };\n  const handleSelectSuggestion = (movie, setMovie, setSuggestions, setMovieId) => {\n    setMovie(movie.title);\n    setMovieId(movie.id); // Set the selected movie ID\n    setSuggestions([]);\n  };\n  const searchMovies = async () => {\n    if (!startMovie || !endMovie) {\n      setError('Please select both start and end movies.');\n      return;\n    }\n    if (!startMovieId || !endMovieId) {\n      setError('Invalid movie selections. Please try again.');\n      return;\n    }\n    setIsProcessing(true);\n    setProcessedMovies([]);\n    setLoadedMovies([]);\n    setTopProcessedMovies([]);\n    setPath(null);\n    setError(null);\n    try {\n      // Step 1: Fetch the path using movie IDs\n      const pathResponse = await axios.get(`/find_path?start_id=${startMovieId}&end_id=${endMovieId}&algorithm=${algorithm}`);\n      const algorithmPath = pathResponse.data.path;\n      if (algorithmPath) {\n        setPath(algorithmPath);\n        setStartMovieId(algorithmPath.movies[0].id);\n        setEndMovieId(algorithmPath.movies[algorithmPath.movies.length - 1].id);\n\n        // Step 2: Start fetching processed movies progressively\n        fetchProcessedMoviesProgressively();\n      }\n    } catch (err) {\n      console.error('Error finding path:', err);\n      setError('Unable to find a path between the selected movies.');\n      setIsProcessing(false);\n    }\n    try {\n      const pathResponse = await axios.get(`/find_path?start_id=${startMovieId}&end_id=${endMovieId}&algorithm=${algorithm}`);\n      const algorithmPath = pathResponse.data.path;\n      const timeTaken = pathResponse.data.execution_time; // Get execution time\n\n      if (algorithmPath) {\n        setPath(algorithmPath);\n        setStartMovieId(algorithmPath.movies[0].id);\n        setEndMovieId(algorithmPath.movies[algorithmPath.movies.length - 1].id);\n        setExecutionTime(timeTaken); // Set execution time in state\n        fetchProcessedMoviesProgressively();\n      }\n    } catch (err) {\n      console.error('Error finding path:', err);\n      setError('Unable to find a path between the selected movies.');\n      setIsProcessing(false);\n    }\n  };\n  const fetchProcessedMoviesProgressively = async () => {\n    try {\n      let offset = 0;\n      const batchSize = 250;\n      const maxMovies = 500; // Set this to the maximum number of movies you want to load\n\n      const fetchBatch = async () => {\n        setIsLoadingMore(true);\n        const res = await axios.get(`/get_processed_movies?offset=${offset}&limit=${batchSize}`);\n        const newMovies = res.data.processed_movies;\n        const totalCount = res.data.total_count; // New field from backend\n\n        if (newMovies && newMovies.length > 0) {\n          setLoadedMovies(prevMovies => [...prevMovies, ...newMovies]);\n          setTopProcessedMovies(prevMovies => {\n            const updatedMovies = [...prevMovies, ...newMovies];\n            return updatedMovies.slice(0, 250);\n          });\n          offset += newMovies.length;\n          setTotalMoviesCount(totalCount);\n          if (offset < Math.min(totalCount, maxMovies)) {\n            setTimeout(fetchBatch, 100); // Fetch next batch after a short delay\n          } else {\n            setIsLoadingMore(false);\n            setIsProcessing(false);\n          }\n        } else {\n          setIsLoadingMore(false);\n          setIsProcessing(false);\n        }\n      };\n      await fetchBatch();\n    } catch (err) {\n      console.error('Error fetching processed movies:', err);\n      setIsLoadingMore(false);\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDFAC Movie Path Finder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"autocomplete\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: startMovie,\n        onChange: e => {\n          setStartMovie(e.target.value);\n          fetchMovieSuggestions(e.target.value, setStartMovieSuggestions);\n        },\n        placeholder: \"Start Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), startMovieSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"suggestions\",\n        children: startMovieSuggestions.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleSelectSuggestion(movie, setStartMovie, setStartMovieSuggestions, setStartMovieId),\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this), \" (\", movie.year, \") - Directed by\", ' ', movie.director || 'N/A']\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"autocomplete\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: endMovie,\n        onChange: e => {\n          setEndMovie(e.target.value);\n          fetchMovieSuggestions(e.target.value, setEndMovieSuggestions);\n        },\n        placeholder: \"End Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), endMovieSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"suggestions\",\n        children: endMovieSuggestions.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleSelectSuggestion(movie, setEndMovie, setEndMovieSuggestions, setEndMovieId),\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this), \" (\", movie.year, \") - Directed by\", ' ', movie.director || 'N/A']\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"algorithm-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Algorithm:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: algorithm,\n        onChange: e => setAlgorithm(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dijkstra\",\n          children: \"Dijkstra's Algorithm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"bfs\",\n          children: \"Bidirectional BFS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: searchMovies,\n      disabled: isProcessing,\n      children: isProcessing ? 'Searching...' : 'Find Path'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 17\n    }, this), isProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing movies... Please wait.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }, this) : executionTime && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Dijkstra's execution time: \", executionTime.toFixed(2), \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }, this), path && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"path-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [algorithm === 'dijkstra' ? \"Dijkstra's\" : 'Bidirectional BFS', ' ', \"Path:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: path.movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 19\n            }, this), \" (\", movie.year, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 17\n          }, this), index < path.connections.length && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Connected via: \", /*#__PURE__*/_jsxDEV(\"em\", {\n              children: path.connections[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 19\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }, this), loadedMovies.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Processed Movies:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MovieCardDeck, {\n        movies: topProcessedMovies,\n        startMovieId: startMovieId,\n        endMovieId: endMovieId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this), isLoadingMore && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading-more\",\n        children: \"Loading more movies...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true), path && !processedMovies.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"similar-movies\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Similar Movies You Might Like:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"7Y8jfXFi3xIQhaHLf7eoxioog08=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"MovieCardDeck\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieCardDeck","movies","startMovieId","endMovieId","_s","currentIndex","setCurrentIndex","totalMovies","length","handleNext","prevIndex","handlePrev","handleCardClick","movieId","tmdbUrl","window","open","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","index","id","style","backgroundImage","poster_path","title","year","connection","type","name","_c","App","_s2","startMovie","setStartMovie","endMovie","setEndMovie","algorithm","setAlgorithm","startMovieSuggestions","setStartMovieSuggestions","endMovieSuggestions","setEndMovieSuggestions","path","setPath","processedMovies","setProcessedMovies","topProcessedMovies","setTopProcessedMovies","error","setError","setStartMovieId","setEndMovieId","isProcessing","setIsProcessing","loadedMovies","setLoadedMovies","isLoadingMore","setIsLoadingMore","executionTime","setExecutionTime","fetchMovieSuggestions","query","setSuggestions","res","get","encodeURIComponent","data","results","err","console","handleSelectSuggestion","setMovie","setMovieId","searchMovies","pathResponse","algorithmPath","fetchProcessedMoviesProgressively","timeTaken","execution_time","offset","batchSize","maxMovies","fetchBatch","newMovies","processed_movies","totalCount","total_count","prevMovies","updatedMovies","slice","setTotalMoviesCount","Math","min","setTimeout","value","onChange","e","target","placeholder","director","disabled","toFixed","connections","_c2","$RefreshReg$"],"sources":["/Users/vovapet/PycharmProjects/IMDBSpeedrunGame/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './styles.css';\n\n// Updated MovieCardDeck Component\n// In your MovieCardDeck component (inside App.js or a separate file)\n\nfunction MovieCardDeck({ movies, startMovieId, endMovieId }) {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const totalMovies = movies.length;\n\n  const handleNext = () => {\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % totalMovies);\n  };\n\n  const handlePrev = () => {\n    setCurrentIndex((prevIndex) => (prevIndex - 1 + totalMovies) % totalMovies);\n  };\n\n  const handleCardClick = (movieId) => {\n    const tmdbUrl = `https://www.themoviedb.org/movie/${movieId}`;\n    window.open(tmdbUrl, '_blank');\n  };\n\n  if (movies.length === 0) return null;\n\n  return (\n    <div className=\"movie-card-deck\">\n      <button className=\"nav-arrow left-arrow\" onClick={handlePrev}>\n        &#10094;\n      </button>\n      <div className=\"movie-card-container\">\n        {movies.map((movie, index) => (\n          <div\n            key={movie.id}\n            className={`movie-card ${\n              index === currentIndex ? 'active' : 'inactive'\n            } ${\n              movie.id === startMovieId\n                ? 'start-movie'\n                : movie.id === endMovieId\n                ? 'end-movie'\n                : ''\n            }`}\n            style={{\n              backgroundImage: movie.poster_path\n                ? `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`\n                : 'url(/default-poster.jpg)',\n            }}\n            onClick={() => handleCardClick(movie.id)}\n          >\n            <div className=\"movie-info\">\n              <h3>{movie.title}</h3>\n              <p>{movie.year}</p>\n              {movie.connection && (\n                <p className=\"connection-info\">\n                  Connected via: {movie.connection.type} -{' '}\n                  {movie.connection.name}\n                </p>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n      <button className=\"nav-arrow right-arrow\" onClick={handleNext}>\n        &#10095;\n      </button>\n    </div>\n  );\n}\n\nfunction App() {\n  const [startMovie, setStartMovie] = useState('');\n  const [endMovie, setEndMovie] = useState('');\n  const [algorithm, setAlgorithm] = useState('dijkstra');\n  const [startMovieSuggestions, setStartMovieSuggestions] = useState([]);\n  const [endMovieSuggestions, setEndMovieSuggestions] = useState([]);\n  const [path, setPath] = useState(null);\n  const [processedMovies, setProcessedMovies] = useState([]);\n  const [topProcessedMovies, setTopProcessedMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [startMovieId, setStartMovieId] = useState(null);\n  const [endMovieId, setEndMovieId] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [loadedMovies, setLoadedMovies] = useState([]);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [executionTime, setExecutionTime] = useState(null);\n\n\n  const fetchMovieSuggestions = async (query, setSuggestions) => {\n    if (query.length > 2) {\n      try {\n        const res = await axios.get(`/search_movie?movie_name=${encodeURIComponent(query)}`);\n        setSuggestions(res.data.results || []);\n      } catch (err) {\n        console.error('Error fetching movie suggestions:', err);\n        setSuggestions([]);\n      }\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  const handleSelectSuggestion = (movie, setMovie, setSuggestions, setMovieId) => {\n  setMovie(movie.title);\n  setMovieId(movie.id); // Set the selected movie ID\n  setSuggestions([]);\n  };\n\n\n  const searchMovies = async () => {\n    if (!startMovie || !endMovie) {\n      setError('Please select both start and end movies.');\n      return;\n    }\n\n    if (!startMovieId || !endMovieId) {\n      setError('Invalid movie selections. Please try again.');\n      return;\n    }\n\n    setIsProcessing(true);\n    setProcessedMovies([]);\n    setLoadedMovies([]);\n    setTopProcessedMovies([]);\n    setPath(null);\n    setError(null);\n\n    try {\n      // Step 1: Fetch the path using movie IDs\n      const pathResponse = await axios.get(\n        `/find_path?start_id=${startMovieId}&end_id=${endMovieId}&algorithm=${algorithm}`\n      );\n\n      const algorithmPath = pathResponse.data.path;\n\n      if (algorithmPath) {\n        setPath(algorithmPath);\n        setStartMovieId(algorithmPath.movies[0].id);\n        setEndMovieId(algorithmPath.movies[algorithmPath.movies.length - 1].id);\n\n        // Step 2: Start fetching processed movies progressively\n        fetchProcessedMoviesProgressively();\n      }\n\n    } catch (err) {\n      console.error('Error finding path:', err);\n      setError('Unable to find a path between the selected movies.');\n      setIsProcessing(false);\n    }\n\n    try {\n      const pathResponse = await axios.get(\n        `/find_path?start_id=${startMovieId}&end_id=${endMovieId}&algorithm=${algorithm}`\n      );\n\n      const algorithmPath = pathResponse.data.path;\n      const timeTaken = pathResponse.data.execution_time; // Get execution time\n\n      if (algorithmPath) {\n        setPath(algorithmPath);\n        setStartMovieId(algorithmPath.movies[0].id);\n        setEndMovieId(algorithmPath.movies[algorithmPath.movies.length - 1].id);\n\n        setExecutionTime(timeTaken); // Set execution time in state\n        fetchProcessedMoviesProgressively();\n      }\n    } catch (err) {\n      console.error('Error finding path:', err);\n      setError('Unable to find a path between the selected movies.');\n      setIsProcessing(false);\n    }\n  };\n\nconst fetchProcessedMoviesProgressively = async () => {\n    try {\n      let offset = 0;\n      const batchSize = 250;\n      const maxMovies = 500; // Set this to the maximum number of movies you want to load\n\n      const fetchBatch = async () => {\n        setIsLoadingMore(true);\n        const res = await axios.get(`/get_processed_movies?offset=${offset}&limit=${batchSize}`);\n        const newMovies = res.data.processed_movies;\n        const totalCount = res.data.total_count; // New field from backend\n\n        if (newMovies && newMovies.length > 0) {\n          setLoadedMovies(prevMovies => [...prevMovies, ...newMovies]);\n          setTopProcessedMovies(prevMovies => {\n            const updatedMovies = [...prevMovies, ...newMovies];\n            return updatedMovies.slice(0, 250);\n          });\n          offset += newMovies.length;\n          setTotalMoviesCount(totalCount);\n\n          if (offset < Math.min(totalCount, maxMovies)) {\n            setTimeout(fetchBatch, 100); // Fetch next batch after a short delay\n          } else {\n            setIsLoadingMore(false);\n            setIsProcessing(false);\n          }\n        } else {\n          setIsLoadingMore(false);\n          setIsProcessing(false);\n        }\n      };\n\n      await fetchBatch();\n    } catch (err) {\n      console.error('Error fetching processed movies:', err);\n      setIsLoadingMore(false);\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>🎬 Movie Path Finder</h1>\n\n      {/* Start Movie Input */}\n      <div className=\"autocomplete\">\n        <input\n          type=\"text\"\n          value={startMovie}\n          onChange={(e) => {\n            setStartMovie(e.target.value);\n            fetchMovieSuggestions(e.target.value, setStartMovieSuggestions);\n          }}\n          placeholder=\"Start Movie\"\n        />\n        {startMovieSuggestions.length > 0 && (\n          <ul className=\"suggestions\">\n            {startMovieSuggestions.map((movie) => (\n              <li\n                key={movie.id}\n                onClick={() =>\n                  handleSelectSuggestion(\n                    movie,\n                    setStartMovie,\n                    setStartMovieSuggestions,\n                    setStartMovieId\n                  )\n                }\n              >\n                <strong>{movie.title}</strong> ({movie.year}) - Directed by{' '}\n                {movie.director || 'N/A'}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      {/* End Movie Input */}\n      <div className=\"autocomplete\">\n        <input\n          type=\"text\"\n          value={endMovie}\n          onChange={(e) => {\n            setEndMovie(e.target.value);\n            fetchMovieSuggestions(e.target.value, setEndMovieSuggestions);\n          }}\n          placeholder=\"End Movie\"\n        />\n        {endMovieSuggestions.length > 0 && (\n          <ul className=\"suggestions\">\n            {endMovieSuggestions.map((movie) => (\n              <li\n                key={movie.id}\n                onClick={() =>\n                  handleSelectSuggestion(\n                    movie,\n                    setEndMovie,\n                    setEndMovieSuggestions,\n                    setEndMovieId\n                  )\n                }\n              >\n                <strong>{movie.title}</strong> ({movie.year}) - Directed by{' '}\n                {movie.director || 'N/A'}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      {/* Algorithm Selection */}\n      <div className=\"algorithm-selection\">\n        <label>Select Algorithm:</label>\n        <select value={algorithm} onChange={(e) => setAlgorithm(e.target.value)}>\n          <option value=\"dijkstra\">Dijkstra's Algorithm</option>\n          <option value=\"bfs\">Bidirectional BFS</option>\n        </select>\n      </div>\n\n      {/* Search Button */}\n      <button onClick={searchMovies} disabled={isProcessing}>\n        {isProcessing ? 'Searching...' : 'Find Path'}\n      </button>\n\n      {/* Error Message */}\n      {error && <p className=\"error\">{error}</p>}\n\n      {/* Loading Indicator */}\n      {isProcessing ? (\n        <div className=\"loading\">\n          <p>Processing movies... Please wait.</p>\n        </div>\n      ) : (\n      executionTime && (\n        <div className=\"loading\">\n         <p>Dijkstra's execution time: {executionTime.toFixed(2)} seconds</p>\n        </div>\n      )\n      )}\n\n      {/* Display Path */}\n      {path && (\n        <div className=\"path-result\">\n          <h2>\n            {algorithm === 'dijkstra'\n              ? \"Dijkstra's\"\n              : 'Bidirectional BFS'}{' '}\n            Path:\n          </h2>\n          <ul>\n            {path.movies.map((movie, index) => (\n              <li key={movie.id}>\n                <p>\n                  <strong>{movie.title}</strong> ({movie.year})\n                </p>\n                {index < path.connections.length && (\n                  <p>\n                    Connected via: <em>{path.connections[index]}</em>\n                  </p>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {/* Processed Movies */}\n      {loadedMovies.length > 0 && (\n        <>\n          <h2>Processed Movies:</h2>\n          <MovieCardDeck\n            movies={topProcessedMovies}\n            startMovieId={startMovieId}\n            endMovieId={endMovieId}\n          />\n          {isLoadingMore && <p className=\"loading-more\">Loading more movies...</p>}\n        </>\n      )}\n\n      {/* Similar Movies Section */}\n      {path && !processedMovies.length && (\n        <div className=\"similar-movies\">\n          <h2>Similar Movies You Might Like:</h2>\n          <ul>\n            {/* Implement similar movies logic */}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}