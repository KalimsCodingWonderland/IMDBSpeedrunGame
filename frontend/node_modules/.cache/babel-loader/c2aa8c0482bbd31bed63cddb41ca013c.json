{"ast":null,"code":"var _jsxFileName = \"/Users/lucasperez/GitHub/IMDBSpeedrunGame/frontend/src/MovieCardDeck.js\",\n  _s = $RefreshSig$();\n// MovieCardDeck.js\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieCardDeck({\n  movies,\n  startMovieId,\n  endMovieId\n}) {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const totalMovies = movies.length;\n  const handleNext = () => {\n    setCurrentIndex(prevIndex => (prevIndex + 1) % totalMovies);\n  };\n  const handlePrev = () => {\n    setCurrentIndex(prevIndex => (prevIndex - 1 + totalMovies) % totalMovies);\n  };\n  const handleCardClick = movieId => {\n    const tmdbUrl = `https://www.themoviedb.org/movie/${movieId}`;\n    window.open(tmdbUrl, '_blank');\n  };\n  if (movies.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-card-deck\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nav-arrow left-arrow\",\n      onClick: handlePrev,\n      children: \"\\u276E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-card-container\",\n      children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `movie-card ${index === currentIndex ? 'active' : 'inactive'} ${movie.id === startMovieId ? 'start-movie' : movie.id === endMovieId ? 'end-movie' : ''}`,\n        style: {\n          backgroundImage: movie.poster_path ? `url(https://image.tmdb.org/t/p/w500${movie.poster_path})` : 'url(/default-poster.jpg)'\n        },\n        onClick: () => handleCardClick(movie.id),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movie.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), movie.connection && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"connection-info\",\n            children: [\"Connected via: \", movie.connection.type, \" -\", ' ', movie.connection.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nav-arrow right-arrow\",\n      onClick: handleNext,\n      children: \"\\u276F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(MovieCardDeck, \"tusBbsahUVevXfyh6oH5R6YDC9Q=\");\n_c = MovieCardDeck;\nexport default MovieCardDeck;\nvar _c;\n$RefreshReg$(_c, \"MovieCardDeck\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MovieCardDeck","movies","startMovieId","endMovieId","_s","currentIndex","setCurrentIndex","totalMovies","length","handleNext","prevIndex","handlePrev","handleCardClick","movieId","tmdbUrl","window","open","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","index","id","style","backgroundImage","poster_path","title","year","connection","type","name","_c","$RefreshReg$"],"sources":["/Users/lucasperez/GitHub/IMDBSpeedrunGame/frontend/src/MovieCardDeck.js"],"sourcesContent":["// MovieCardDeck.js\n\nimport React, { useState } from 'react';\n\nfunction MovieCardDeck({ movies, startMovieId, endMovieId }) {\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const totalMovies = movies.length;\n\n    const handleNext = () => {\n        setCurrentIndex((prevIndex) => (prevIndex + 1) % totalMovies);\n    };\n\n    const handlePrev = () => {\n        setCurrentIndex((prevIndex) => (prevIndex - 1 + totalMovies) % totalMovies);\n    };\n\n    const handleCardClick = (movieId) => {\n        const tmdbUrl = `https://www.themoviedb.org/movie/${movieId}`;\n        window.open(tmdbUrl, '_blank');\n    };\n\n    if (movies.length === 0) return null;\n\n    return (\n        <div className=\"movie-card-deck\">\n            <button className=\"nav-arrow left-arrow\" onClick={handlePrev}>\n                &#10094;\n            </button>\n            <div className=\"movie-card-container\">\n                {movies.map((movie, index) => (\n                    <div\n                        key={movie.id}\n                        className={`movie-card ${index === currentIndex ? 'active' : 'inactive'\n                            } ${movie.id === startMovieId\n                                ? 'start-movie'\n                                : movie.id === endMovieId\n                                    ? 'end-movie'\n                                    : ''\n                            }`}\n                        style={{\n                            backgroundImage: movie.poster_path\n                                ? `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`\n                                : 'url(/default-poster.jpg)',\n                        }}\n                        onClick={() => handleCardClick(movie.id)}\n                    >\n                        <div className=\"movie-info\">\n                            <h3>{movie.title}</h3>\n                            <p>{movie.year}</p>\n                            {movie.connection && (\n                                <p className=\"connection-info\">\n                                    Connected via: {movie.connection.type} -{' '}\n                                    {movie.connection.name}\n                                </p>\n                            )}\n                        </div>\n                    </div>\n                ))}\n            </div>\n            <button className=\"nav-arrow right-arrow\" onClick={handleNext}>\n                &#10095;\n            </button>\n        </div>\n    );\n}\n\nexport default MovieCardDeck;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}