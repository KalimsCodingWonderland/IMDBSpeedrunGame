{"ast":null,"code":"var _jsxFileName = \"/Users/lucasperez/GitHub/IMDBSpeedrunGame/frontend/src/GraphVisualizer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GraphVisualizer({\n  fullPath,\n  processedMovies\n}) {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove(); // Clear previous content\n\n    const width = 800;\n    const height = 600;\n\n    // Generate nodes and links\n    const nodes = processedMovies.map(movie => ({\n      id: movie.id,\n      title: movie.title\n    }));\n    const links = processedMovies.slice(0, processedMovies.length - 1).map((movie, index) => {\n      var _processedMovies;\n      return {\n        source: movie.id,\n        target: (_processedMovies = processedMovies[index + 1]) === null || _processedMovies === void 0 ? void 0 : _processedMovies.id\n      };\n    });\n\n    // Create a zoomable group\n    const zoomGroup = svg.append('g');\n\n    // Add zoom behavior\n    const zoom = d3.zoom().scaleExtent([0.1, 5]) // Set zoom scale limits\n    .on('zoom', event => {\n      zoomGroup.attr('transform', event.transform);\n    });\n    svg.call(zoom);\n\n    // Simulation setup\n    const simulation = d3.forceSimulation(nodes).force('link', d3.forceLink(links).id(d => d.id).distance(150)).force('charge', d3.forceManyBody().strength(-300)).force('center', d3.forceCenter(width / 2, height / 2));\n\n    // Draw links\n    const link = zoomGroup.append('g').attr('stroke', '#999').attr('stroke-width', 2).selectAll('line').data(links).join('line');\n\n    // Draw nodes\n    const node = zoomGroup.append('g').selectAll('circle').data(nodes).join('circle').attr('r', 15).attr('fill', '#69b3a2').call(d3.drag().on('start', (event, d) => {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }).on('drag', (event, d) => {\n      d.fx = event.x;\n      d.fy = event.y;\n    }).on('end', (event, d) => {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }));\n\n    // Add titles to nodes\n    const text = zoomGroup.append('g').selectAll('text').data(nodes).join('text').attr('dx', 20).attr('dy', 4).text(d => d.title).attr('font-size', '12px').attr('fill', '#fff');\n\n    // Update positions on each tick\n    simulation.on('tick', () => {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      node.attr('cx', d => d.x).attr('cy', d => d.y);\n      text.attr('x', d => d.x).attr('y', d => d.y);\n    });\n\n    // Adjust view to fit all nodes\n    const adjustZoomToFit = () => {\n      const bounds = zoomGroup.node().getBBox();\n      const fullWidth = bounds.width;\n      const fullHeight = bounds.height;\n      const midX = bounds.x + fullWidth / 2;\n      const midY = bounds.y + fullHeight / 2;\n      const scale = Math.min(width / fullWidth, height / fullHeight) * 0.9; // Add padding\n      const transform = d3.zoomIdentity.translate(width / 2, height / 2).scale(scale).translate(-midX, -midY);\n      svg.transition().duration(750).call(zoom.transform, transform);\n    };\n\n    // Run adjustment after simulation stabilizes\n    setTimeout(adjustZoomToFit, 1000);\n\n    // Cleanup on unmount\n    return () => {\n      simulation.stop();\n    };\n  }, [processedMovies]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    width: 800,\n    height: 600,\n    style: {\n      border: '1px solid black'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 12\n  }, this);\n}\n_s(GraphVisualizer, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = GraphVisualizer;\nexport default GraphVisualizer;\nvar _c;\n$RefreshReg$(_c, \"GraphVisualizer\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","GraphVisualizer","fullPath","processedMovies","_s","svgRef","svg","select","current","selectAll","remove","width","height","nodes","map","movie","id","title","links","slice","length","index","_processedMovies","source","target","zoomGroup","append","zoom","scaleExtent","on","event","attr","transform","call","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","strength","forceCenter","link","data","join","node","drag","active","alphaTarget","restart","fx","x","fy","y","text","adjustZoomToFit","bounds","getBBox","fullWidth","fullHeight","midX","midY","scale","Math","min","zoomIdentity","translate","transition","duration","setTimeout","stop","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lucasperez/GitHub/IMDBSpeedrunGame/frontend/src/GraphVisualizer.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nfunction GraphVisualizer({ fullPath, processedMovies }) {\n    const svgRef = useRef();\n\n    useEffect(() => {\n        const svg = d3.select(svgRef.current);\n        svg.selectAll('*').remove(); // Clear previous content\n\n        const width = 800;\n        const height = 600;\n\n        // Generate nodes and links\n        const nodes = processedMovies.map((movie) => ({\n            id: movie.id,\n            title: movie.title,\n        }));\n\n        const links = processedMovies.slice(0, processedMovies.length - 1).map((movie, index) => ({\n            source: movie.id,\n            target: processedMovies[index + 1]?.id,\n        }));\n\n        // Create a zoomable group\n        const zoomGroup = svg.append('g');\n\n        // Add zoom behavior\n        const zoom = d3.zoom()\n            .scaleExtent([0.1, 5]) // Set zoom scale limits\n            .on('zoom', (event) => {\n                zoomGroup.attr('transform', event.transform);\n            });\n\n        svg.call(zoom);\n\n        // Simulation setup\n        const simulation = d3.forceSimulation(nodes)\n            .force('link', d3.forceLink(links).id((d) => d.id).distance(150))\n            .force('charge', d3.forceManyBody().strength(-300))\n            .force('center', d3.forceCenter(width / 2, height / 2));\n\n        // Draw links\n        const link = zoomGroup.append('g')\n            .attr('stroke', '#999')\n            .attr('stroke-width', 2)\n            .selectAll('line')\n            .data(links)\n            .join('line');\n\n        // Draw nodes\n        const node = zoomGroup.append('g')\n            .selectAll('circle')\n            .data(nodes)\n            .join('circle')\n            .attr('r', 15)\n            .attr('fill', '#69b3a2')\n            .call(\n                d3\n                    .drag()\n                    .on('start', (event, d) => {\n                        if (!event.active) simulation.alphaTarget(0.3).restart();\n                        d.fx = d.x;\n                        d.fy = d.y;\n                    })\n                    .on('drag', (event, d) => {\n                        d.fx = event.x;\n                        d.fy = event.y;\n                    })\n                    .on('end', (event, d) => {\n                        if (!event.active) simulation.alphaTarget(0);\n                        d.fx = null;\n                        d.fy = null;\n                    })\n            );\n\n        // Add titles to nodes\n        const text = zoomGroup.append('g')\n            .selectAll('text')\n            .data(nodes)\n            .join('text')\n            .attr('dx', 20)\n            .attr('dy', 4)\n            .text((d) => d.title)\n            .attr('font-size', '12px')\n            .attr('fill', '#fff');\n\n        // Update positions on each tick\n        simulation.on('tick', () => {\n            link\n                .attr('x1', (d) => d.source.x)\n                .attr('y1', (d) => d.source.y)\n                .attr('x2', (d) => d.target.x)\n                .attr('y2', (d) => d.target.y);\n\n            node.attr('cx', (d) => d.x).attr('cy', (d) => d.y);\n\n            text.attr('x', (d) => d.x).attr('y', (d) => d.y);\n        });\n\n        // Adjust view to fit all nodes\n        const adjustZoomToFit = () => {\n            const bounds = zoomGroup.node().getBBox();\n            const fullWidth = bounds.width;\n            const fullHeight = bounds.height;\n\n            const midX = bounds.x + fullWidth / 2;\n            const midY = bounds.y + fullHeight / 2;\n\n            const scale = Math.min(width / fullWidth, height / fullHeight) * 0.9; // Add padding\n            const transform = d3.zoomIdentity\n                .translate(width / 2, height / 2)\n                .scale(scale)\n                .translate(-midX, -midY);\n\n            svg.transition().duration(750).call(zoom.transform, transform);\n        };\n\n        // Run adjustment after simulation stabilizes\n        setTimeout(adjustZoomToFit, 1000);\n\n        // Cleanup on unmount\n        return () => {\n            simulation.stop();\n        };\n    }, [processedMovies]);\n\n    return <svg ref={svgRef} width={800} height={600} style={{ border: '1px solid black' }}></svg>;\n}\n\nexport default GraphVisualizer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}