{"ast":null,"code":"var _jsxFileName = \"/Users/lucasperez/GitHub/IMDBSpeedrunGame/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MovieCardDeck from './MovieCardDeck';\nimport GraphPage from './GraphPage'; // New component for the graph page\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentPage, setCurrentPage] = useState('home'); // Navigation state\n\n  const renderPage = () => {\n    switch (currentPage) {\n      case 'home':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\uD83C\\uDFAC Movie Path Finder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCurrentPage('graph'),\n            children: \"View Interactive Graph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MovieCardDeck, {\n            movies: [] /* Pass your movie data */,\n            startMovieId: null,\n            endMovieId: null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this);\n      case 'graph':\n        return /*#__PURE__*/_jsxDEV(GraphPage, {\n          navigateHome: () => setCurrentPage('home')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Error: Unknown Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: renderPage()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"KLlrbvIFn6o4dTsrFf/Szg7G3bM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MovieCardDeck","GraphPage","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","renderPage","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","movies","startMovieId","endMovieId","navigateHome","className","_c","$RefreshReg$"],"sources":["/Users/lucasperez/GitHub/IMDBSpeedrunGame/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MovieCardDeck from './MovieCardDeck';\nimport GraphPage from './GraphPage'; // New component for the graph page\nimport './styles.css';\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState('home'); // Navigation state\n\n  const renderPage = () => {\n    switch (currentPage) {\n      case 'home':\n        return (\n          <div>\n            <h1>ðŸŽ¬ Movie Path Finder</h1>\n            <button onClick={() => setCurrentPage('graph')}>\n              View Interactive Graph\n            </button>\n            {/* Use your existing MovieCardDeck */}\n            <MovieCardDeck\n              movies={[] /* Pass your movie data */}\n              startMovieId={null}\n              endMovieId={null}\n            />\n          </div>\n        );\n      case 'graph':\n        return (\n          <GraphPage\n            navigateHome={() => setCurrentPage('home')}\n          />\n        );\n      default:\n        return <div>Error: Unknown Page</div>;\n    }\n  };\n\n  return <div className=\"container\">{renderPage()}</div>;\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;AACrC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;;EAExD,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvB,QAAQF,WAAW;MACjB,KAAK,MAAM;QACT,oBACEH,OAAA;UAAAM,QAAA,gBACEN,OAAA;YAAAM,QAAA,EAAI;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7BV,OAAA;YAAQW,OAAO,EAAEA,CAAA,KAAMP,cAAc,CAAC,OAAO,CAAE;YAAAE,QAAA,EAAC;UAEhD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAETV,OAAA,CAACH,aAAa;YACZe,MAAM,EAAE,EAAE,CAAC,0BAA2B;YACtCC,YAAY,EAAE,IAAK;YACnBC,UAAU,EAAE;UAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAEV,KAAK,OAAO;QACV,oBACEV,OAAA,CAACF,SAAS;UACRiB,YAAY,EAAEA,CAAA,KAAMX,cAAc,CAAC,MAAM;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAEN;QACE,oBAAOV,OAAA;UAAAM,QAAA,EAAK;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;IACzC;EACF,CAAC;EAED,oBAAOV,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAV,QAAA,EAAED,UAAU,CAAC;EAAC;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACxD;AAACR,EAAA,CAhCQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}